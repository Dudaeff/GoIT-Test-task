{"version":3,"file":"static/js/670.2a4acf88.chunk.js","mappings":"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","sources":["components/CommonStyles/Wrapper.js","pages/Tweets.styled.js","redux/users/selectors.js","components/UsersList/UsersList.styled.js","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.js","components/LoadMoreButton/LoadMorebutton.styled.js","components/LoadMoreButton/LoadMorebutton.js","components/UsersList/UsersList.js","pages/Tweets.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  @media screen and (min-width: 480px) {\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 738px;\r\n  }\r\n  @media screen and (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`;\r\n\r\nexport { Wrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst TweetsView = styled.section`\r\n  padding: 40px 0;\r\n`;\r\n\r\nexport { TweetsView };\r\n","const selectUsers = state => state.users.all;\r\n\r\nconst selectFollowing = state => state.users.following;\r\n\r\nconst selectUsersIsLoading = state => state.users.isLoading;\r\n\r\nconst selectUsersError = state => state.users.error;\r\n\r\nexport { selectUsers, selectFollowing, selectUsersIsLoading, selectUsersError };\r\n","import styled from 'styled-components';\r\n\r\nconst UsersListStyled = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 30px;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport { UsersListStyled };\r\n","import { colors } from 'components/CommonStyles/Variables';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled.article`\r\n  position: relative;\r\n  width: 380px;\r\n  height: 460px;\r\n\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst CardLogoWrapper = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  width: 76px;\r\n  height: 22px;\r\n`;\r\n\r\nconst ProfileBackgroundWrapper = styled.div`\r\n  padding: 28px 36px 18px 36px;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  &::before {\r\n    content: '';\r\n\r\n    width: 380px;\r\n    height: 8px;\r\n    background: ${colors.decorationsBgrnd};\r\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n      inset 0px -1.71846px 3.43693px #ae7be3,\r\n      inset 0px 3.43693px 2.5777px #fbf8ff;\r\n  }\r\n`;\r\n\r\nconst ProfileAvatarThumb = styled.div`\r\n  position: absolute;\r\n  left: 150px;\r\n  top: 178px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  border-radius: 85.9232px;\r\n  background: ${colors.decorationsBgrnd};\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px #ae7be3,\r\n    inset 0px 4.39163px 3.29372px #fbf8ff;\r\n\r\n  &::before {\r\n    content: '';\r\n    width: 62px;\r\n    height: 62px;\r\n    border-radius: 85.9232px;\r\n    background: ${colors.userImageBgrnd};\r\n  }\r\n`;\r\n\r\nconst ProfileAvatar = styled.img`\r\n  position: absolute;\r\n  width: 62px;\r\n  height: 62px;\r\n  border-radius: 85.9232px;\r\n`;\r\n\r\nconst ProfileInfoList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  row-gap: 16px;\r\n  margin-top: 62px;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nconst ProfileInfoText = styled.h3`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: ${colors.text};\r\n`;\r\n\r\nconst ProfileButton = styled.button`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: ${colors.btnText};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n\r\n  background: ${colors.btnBgrnd};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  &.active {\r\n    background: ${colors.btnActive};\r\n  }\r\n`;\r\n\r\nexport {\r\n  CardLogoWrapper,\r\n  ProfileBackgroundWrapper,\r\n  Card,\r\n  Profile,\r\n  ProfileAvatarThumb,\r\n  ProfileAvatar,\r\n  ProfileInfoList,\r\n  ProfileButton,\r\n  ProfileInfoText,\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { followUser, unfollowUser } from 'redux/users/operations';\r\nimport { selectFollowing } from 'redux/users/selectors';\r\nimport {\r\n  Card,\r\n  CardLogoWrapper,\r\n  Profile,\r\n  ProfileBackgroundWrapper,\r\n  ProfileButton,\r\n  ProfileAvatarThumb,\r\n  ProfileAvatar,\r\n  ProfileInfoList,\r\n  ProfileInfoText,\r\n} from './UserCard.styled';\r\nimport GoITLogo from 'images/logo.png';\r\nimport ProfileBackgroundImage from 'images/profile-background.png';\r\n\r\nexport const UserCard = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const following = useSelector(selectFollowing);\r\n  const { followers, tweets, avatar, id } = user;\r\n  const isFollowing = following.find(user => user.id === id);\r\n\r\n  const onFollowBtnClick = userId => {\r\n    if (!isFollowing) {\r\n      dispatch(followUser(userId));\r\n    } else {\r\n      dispatch(unfollowUser(id));\r\n    }\r\n  };\r\n\r\n  const visibleFollowers = isFollowing\r\n    ? isFollowing?.followers.toLocaleString('en-US')\r\n    : followers.toLocaleString('en-US');\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogoWrapper>\r\n        <img src={GoITLogo} alt=\"logo of the company GoIT\" />\r\n      </CardLogoWrapper>\r\n      <ProfileBackgroundWrapper>\r\n        <img\r\n          src={ProfileBackgroundImage}\r\n          alt=\"two chats, ask and answer dialogues\"\r\n        />\r\n      </ProfileBackgroundWrapper>\r\n      <Profile>\r\n        <ProfileAvatarThumb>\r\n          <ProfileAvatar src={avatar} alt=\"user profile avatar\" />\r\n        </ProfileAvatarThumb>\r\n        <ProfileInfoList>\r\n          <li>\r\n            <ProfileInfoText>{tweets} tweets</ProfileInfoText>\r\n          </li>\r\n          <li>\r\n            <ProfileInfoText>{visibleFollowers} followers</ProfileInfoText>\r\n          </li>\r\n        </ProfileInfoList>\r\n        <ProfileButton\r\n          type=\"button\"\r\n          className={isFollowing && 'active'}\r\n          onClick={() => onFollowBtnClick(id)}\r\n        >\r\n          {isFollowing ? 'Following' : 'Follow'}\r\n        </ProfileButton>\r\n      </Profile>\r\n    </Card>\r\n  );\r\n};\r\n","import { colors } from 'components/CommonStyles/Variables';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadMoreStyled = styled.button`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: ${colors.btnText};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n  margin: 0 auto;\r\n\r\n  background: ${colors.btnBgrnd};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  transition: background 250ms ease-out;\r\n\r\n  &:hover {\r\n    background: ${colors.btnActive};\r\n  }\r\n`;\r\n\r\nexport { LoadMoreStyled };\r\n","import { LoadMoreStyled } from './LoadMorebutton.styled';\r\n\r\nexport const LoadMoreButton = ({ onClick }) => {\r\n  return (\r\n    <LoadMoreStyled type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </LoadMoreStyled>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers } from 'redux/users/operations';\r\nimport { selectUsers, selectUsersIsLoading } from 'redux/users/selectors';\r\nimport { UsersListStyled } from './UsersList.styled';\r\nimport { UserCard } from 'components/UserCard/UserCard';\r\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMorebutton';\r\n\r\nexport const UsersList = () => {\r\n  const [visibleCardsQty, setVisibleCardsQty] = useState(3);\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(selectUsers);\r\n  const isLoading = useSelector(selectUsersIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleLoadMoreBtn = () => {\r\n    setVisibleCardsQty(prevValue => prevValue + 3);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UsersListStyled>\r\n        {users?.slice(0, visibleCardsQty).map(user => (\r\n          <li key={user.id}>\r\n            <UserCard user={user} />\r\n          </li>\r\n        ))}\r\n      </UsersListStyled>\r\n      {!isLoading && users?.length !== visibleCardsQty && (\r\n        <LoadMoreButton onClick={handleLoadMoreBtn} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Wrapper } from 'components/CommonStyles/Wrapper';\r\nimport { TweetsView } from './Tweets.styled';\r\nimport { UsersList } from 'components/UsersList/UsersList';\r\n\r\nconst Tweets = () => {\r\n  return (\r\n    <TweetsView>\r\n      <Wrapper>\r\n        <UsersList />\r\n      </Wrapper>\r\n    </TweetsView>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","TweetsView","selectUsers","state","users","all","selectFollowing","following","selectUsersIsLoading","isLoading","UsersListStyled","Card","CardLogoWrapper","_templateObject2","ProfileBackgroundWrapper","_templateObject3","Profile","_templateObject4","colors","ProfileAvatarThumb","_templateObject5","ProfileAvatar","_templateObject6","ProfileInfoList","_templateObject7","ProfileInfoText","_templateObject8","ProfileButton","_templateObject9","UserCard","_ref","user","dispatch","useDispatch","useSelector","followers","tweets","avatar","id","isFollowing","find","visibleFollowers","toLocaleString","_jsxs","children","_jsx","src","alt","ProfileBackgroundImage","type","className","onClick","userId","unfollowUser","followUser","LoadMoreStyled","LoadMoreButton","UsersList","_useState","useState","_useState2","_slicedToArray","visibleCardsQty","setVisibleCardsQty","useEffect","fetchUsers","_Fragment","slice","map","length","prevValue"],"sourceRoot":""}