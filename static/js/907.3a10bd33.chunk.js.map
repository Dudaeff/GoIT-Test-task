{"version":3,"file":"static/js/907.3a10bd33.chunk.js","mappings":"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","sources":["components/CommonStyles/Wrapper.js","pages/Tweets.styled.js","redux/users/selectors.js","components/UsersList/UsersList.styled.js","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.js","components/LoadMoreButton/LoadMorebutton.styled.js","components/LoadMoreButton/LoadMorebutton.js","redux/filter/selectors.js","components/UsersList/UsersList.js","pages/Tweets.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  @media screen and (min-width: 480px) {\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 738px;\r\n  }\r\n  @media screen and (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`;\r\n\r\nexport { Wrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst TweetsView = styled.section`\r\n  padding: 40px 0;\r\n`;\r\n\r\nexport { TweetsView };\r\n","const selectUsers = state => state.users.items;\r\n\r\nconst selectUsersIsLoading = state => state.users.isLoading;\r\n\r\nconst selectUsersError = state => state.users.error;\r\n\r\nexport { selectUsers, selectUsersIsLoading, selectUsersError };\r\n","import styled from 'styled-components';\r\n\r\nconst UsersListStyled = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 30px;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport { UsersListStyled };\r\n","import { colors } from 'components/CommonStyles/Variables';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled.article`\r\n  position: relative;\r\n  width: 380px;\r\n  height: 460px;\r\n\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst CardLogoWrapper = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  width: 76px;\r\n  height: 22px;\r\n`;\r\n\r\nconst ProfileBackgroundWrapper = styled.div`\r\n  padding: 28px 36px 18px 36px;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  &::before {\r\n    content: '';\r\n\r\n    width: 380px;\r\n    height: 8px;\r\n    background: ${colors.decorationsBgrnd};\r\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n      inset 0px -1.71846px 3.43693px #ae7be3,\r\n      inset 0px 3.43693px 2.5777px #fbf8ff;\r\n  }\r\n`;\r\n\r\nconst ProfileAvatarThumb = styled.div`\r\n  position: absolute;\r\n  left: 150px;\r\n  top: 178px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  border-radius: 85.9232px;\r\n  background: ${colors.decorationsBgrnd};\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px #ae7be3,\r\n    inset 0px 4.39163px 3.29372px #fbf8ff;\r\n\r\n  &::before {\r\n    content: '';\r\n    width: 62px;\r\n    height: 62px;\r\n    border-radius: 85.9232px;\r\n    background: ${colors.userImageBgrnd};\r\n  }\r\n`;\r\n\r\nconst ProfileAvatar = styled.img`\r\n  position: absolute;\r\n  width: 62px;\r\n  height: 62px;\r\n  border-radius: 85.9232px;\r\n`;\r\n\r\nconst ProfileInfoList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  row-gap: 16px;\r\n  margin-top: 62px;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nconst ProfileInfoText = styled.h3`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: ${colors.text};\r\n`;\r\n\r\nconst ProfileButton = styled.button`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: ${colors.btnText};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n\r\n  background: ${colors.btnBgrnd};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  &.active {\r\n    background: ${colors.btnActive};\r\n  }\r\n`;\r\n\r\nexport {\r\n  CardLogoWrapper,\r\n  ProfileBackgroundWrapper,\r\n  Card,\r\n  Profile,\r\n  ProfileAvatarThumb,\r\n  ProfileAvatar,\r\n  ProfileInfoList,\r\n  ProfileButton,\r\n  ProfileInfoText,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { followUser, unfollowUser } from 'redux/users/operations';\r\nimport {\r\n  Card,\r\n  CardLogoWrapper,\r\n  Profile,\r\n  ProfileBackgroundWrapper,\r\n  ProfileButton,\r\n  ProfileAvatarThumb,\r\n  ProfileAvatar,\r\n  ProfileInfoList,\r\n  ProfileInfoText,\r\n} from './UserCard.styled';\r\nimport GoITLogo from 'images/logo.png';\r\nimport ProfileBackgroundImage from 'images/profile-background.png';\r\n\r\nexport const UserCard = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const { followers, tweets, avatar, id, isFollowing } = user;\r\n\r\n  const onFollowBtnClick = userId => {\r\n    if (!isFollowing) {\r\n      dispatch(followUser(userId));\r\n    } else {\r\n      dispatch(unfollowUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogoWrapper>\r\n        <img src={GoITLogo} alt=\"logo of the company GoIT\" />\r\n      </CardLogoWrapper>\r\n      <ProfileBackgroundWrapper>\r\n        <img\r\n          src={ProfileBackgroundImage}\r\n          alt=\"two chats, ask and answer dialogues\"\r\n        />\r\n      </ProfileBackgroundWrapper>\r\n      <Profile>\r\n        <ProfileAvatarThumb>\r\n          <ProfileAvatar src={avatar} alt=\"user profile avatar\" />\r\n        </ProfileAvatarThumb>\r\n        <ProfileInfoList>\r\n          <li>\r\n            <ProfileInfoText>{tweets} tweets</ProfileInfoText>\r\n          </li>\r\n          <li>\r\n            <ProfileInfoText>\r\n              {followers?.toLocaleString('en-US')} followers\r\n            </ProfileInfoText>\r\n          </li>\r\n        </ProfileInfoList>\r\n        <ProfileButton\r\n          type=\"button\"\r\n          className={isFollowing && 'active'}\r\n          onClick={() => onFollowBtnClick(id)}\r\n        >\r\n          {isFollowing ? 'Following' : 'Follow'}\r\n        </ProfileButton>\r\n      </Profile>\r\n    </Card>\r\n  );\r\n};\r\n","import { colors } from 'components/CommonStyles/Variables';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadMoreStyled = styled.button`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: ${colors.btnText};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n  margin: 0 auto;\r\n\r\n  background: ${colors.btnBgrnd};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  transition: background 250ms ease-out;\r\n\r\n  &:hover {\r\n    background: ${colors.btnActive};\r\n  }\r\n`;\r\n\r\nexport { LoadMoreStyled };\r\n","import { LoadMoreStyled } from './LoadMorebutton.styled';\r\n\r\nexport const LoadMoreButton = ({ onClick }) => {\r\n  return (\r\n    <LoadMoreStyled type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </LoadMoreStyled>\r\n  );\r\n};\r\n","const selectFilterStatus = state => state.filter.status;\r\n\r\nexport { selectFilterStatus };\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers, loadMoreUsers } from 'redux/users/operations';\r\nimport { selectUsers, selectUsersIsLoading } from 'redux/users/selectors';\r\nimport { UsersListStyled } from './UsersList.styled';\r\nimport { UserCard } from 'components/UserCard/UserCard';\r\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMorebutton';\r\nimport { selectFilterStatus } from 'redux/filter/selectors';\r\n\r\nexport const UsersList = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(selectUsers);\r\n  const isLoading = useSelector(selectUsersIsLoading);\r\n  const statusFilter = useSelector(selectFilterStatus);\r\n  const [numberOfPage, setNumberOfPage] = useState(2);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleLoadMore = () => {\r\n    setNumberOfPage(prevPage => prevPage + 1);\r\n    dispatch(loadMoreUsers(numberOfPage));\r\n  };\r\n\r\n  const visibleUsers = users.filter(user => {\r\n    switch (statusFilter) {\r\n      case 'follow':\r\n        return user.isFollowing === false;\r\n      case 'following':\r\n        return user.isFollowing === true;\r\n      default:\r\n        return users;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <UsersListStyled>\r\n        {visibleUsers?.map(user => (\r\n          <li key={user.id}>\r\n            <UserCard user={user} />\r\n          </li>\r\n        ))}\r\n      </UsersListStyled>\r\n      {!isLoading && <LoadMoreButton onClick={handleLoadMore} />}\r\n    </>\r\n  );\r\n};\r\n","import { Wrapper } from 'components/CommonStyles/Wrapper';\r\nimport { TweetsView } from './Tweets.styled';\r\nimport { UsersList } from 'components/UsersList/UsersList';\r\n\r\nconst Tweets = () => {\r\n  return (\r\n    <TweetsView>\r\n      <Wrapper>\r\n        <UsersList />\r\n      </Wrapper>\r\n    </TweetsView>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","TweetsView","selectUsers","state","users","items","selectUsersIsLoading","isLoading","UsersListStyled","Card","CardLogoWrapper","_templateObject2","ProfileBackgroundWrapper","_templateObject3","Profile","_templateObject4","colors","ProfileAvatarThumb","_templateObject5","ProfileAvatar","_templateObject6","ProfileInfoList","_templateObject7","ProfileInfoText","_templateObject8","ProfileButton","_templateObject9","UserCard","_ref","user","dispatch","useDispatch","followers","tweets","avatar","id","isFollowing","_jsxs","children","_jsx","src","alt","ProfileBackgroundImage","toLocaleString","type","className","onClick","userId","unfollowUser","followUser","LoadMoreStyled","LoadMoreButton","selectFilterStatus","filter","status","UsersList","useSelector","statusFilter","_useState","useState","_useState2","_slicedToArray","numberOfPage","setNumberOfPage","useEffect","fetchUsers","visibleUsers","_Fragment","map","prevPage","loadMoreUsers"],"sourceRoot":""}