{"version":3,"file":"static/js/713.3e33e687.chunk.js","mappings":"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","sources":["components/CommonStyles/Wrapper.js","pages/Tweets.styled.js","services/usersAPI.js","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.js","components/UsersList/UsersList.styled.js","components/LoadMoreButton/LoadMorebutton.styled.js","components/LoadMoreButton/LoadMorebutton.js","components/UsersList/UsersList.js","pages/Tweets.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  @media screen and (min-width: 480px) {\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 738px;\r\n  }\r\n  @media screen and (min-width: 1200px) {\r\n    max-width: 1200px;\r\n  }\r\n`;\r\n\r\nexport { Wrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst TweetsView = styled.section`\r\n  padding: 40px 0;\r\n`;\r\n\r\nexport { TweetsView };\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://642b121cb11efeb759a9f2bd.mockapi.io';\r\n\r\nexport const fetchUsers = async () => {\r\n  try {\r\n    const { data } = await axios.get('/users');\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const setFollowUser = async (id, update) => {\r\n  try {\r\n    await axios.put(`/users/${id}`, update);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const setUnFollowUser = async (id, update) => {\r\n  try {\r\n    await axios.put(`/users/${id}`, update);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n","import { colors } from 'components/CommonStyles/Variables';\r\nimport styled from 'styled-components';\r\n\r\nconst Card = styled.article`\r\n  position: relative;\r\n  width: 380px;\r\n  height: 460px;\r\n\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst CardLogoWrapper = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  width: 76px;\r\n  height: 22px;\r\n`;\r\n\r\nconst ProfileBackgroundWrapper = styled.div`\r\n  padding: 28px 36px 18px 36px;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  &::before {\r\n    content: '';\r\n\r\n    width: 380px;\r\n    height: 8px;\r\n    background: ${colors.decorationsBgrnd};\r\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n      inset 0px -1.71846px 3.43693px #ae7be3,\r\n      inset 0px 3.43693px 2.5777px #fbf8ff;\r\n  }\r\n`;\r\n\r\nconst ProfileAvatarThumb = styled.div`\r\n  position: absolute;\r\n  left: 150px;\r\n  top: 178px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  border-radius: 85.9232px;\r\n  background: ${colors.decorationsBgrnd};\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px #ae7be3,\r\n    inset 0px 4.39163px 3.29372px #fbf8ff;\r\n\r\n  &::before {\r\n    content: '';\r\n    width: 62px;\r\n    height: 62px;\r\n    border-radius: 85.9232px;\r\n    background: ${colors.userImageBgrnd};\r\n  }\r\n`;\r\n\r\nconst ProfileAvatar = styled.img`\r\n  position: absolute;\r\n  width: 62px;\r\n  height: 62px;\r\n  border-radius: 85.9232px;\r\n`;\r\n\r\nconst ProfileInfoList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  row-gap: 16px;\r\n  margin-top: 62px;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nconst ProfileInfoText = styled.h3`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: ${colors.text};\r\n`;\r\n\r\nconst ProfileButton = styled.button`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: ${colors.btnText};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n\r\n  background: ${colors.btnBgrnd};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  &.active {\r\n    background: ${colors.btnActive};\r\n  }\r\n`;\r\n\r\nexport {\r\n  CardLogoWrapper,\r\n  ProfileBackgroundWrapper,\r\n  Card,\r\n  Profile,\r\n  ProfileAvatarThumb,\r\n  ProfileAvatar,\r\n  ProfileInfoList,\r\n  ProfileButton,\r\n  ProfileInfoText,\r\n};\r\n","import {\r\n  Card,\r\n  CardLogoWrapper,\r\n  Profile,\r\n  ProfileBackgroundWrapper,\r\n  ProfileButton,\r\n  ProfileAvatarThumb,\r\n  ProfileAvatar,\r\n  ProfileInfoList,\r\n  ProfileInfoText,\r\n} from './UserCard.styled';\r\nimport GoITLogo from 'images/logo.png';\r\nimport ProfileBackgroundImage from 'images/profile-background.png';\r\n// import { useEffect, useState } from 'react';\r\n\r\nexport const UserCard = ({ user, onFollowClick, following }) => {\r\n  const { followers, tweets, avatar, id } = user;\r\n\r\n  return (\r\n    <Card>\r\n      <CardLogoWrapper>\r\n        <img src={GoITLogo} alt=\"logo of the company GoIT\" />\r\n      </CardLogoWrapper>\r\n      <ProfileBackgroundWrapper>\r\n        <img\r\n          src={ProfileBackgroundImage}\r\n          alt=\"two chats, ask and answer dialogues\"\r\n        />\r\n      </ProfileBackgroundWrapper>\r\n      <Profile>\r\n        <ProfileAvatarThumb>\r\n          <ProfileAvatar src={avatar} alt=\"user profile avatar\" />\r\n        </ProfileAvatarThumb>\r\n        <ProfileInfoList>\r\n          <li>\r\n            <ProfileInfoText>{tweets} tweets</ProfileInfoText>\r\n          </li>\r\n          <li>\r\n            <ProfileInfoText>{followers} followers</ProfileInfoText>\r\n          </li>\r\n        </ProfileInfoList>\r\n        <ProfileButton type=\"button\" onClick={() => onFollowClick(id)}>\r\n          {/* {isFollowed ? 'Following' : 'Follow'} */}\r\n          Follow\r\n        </ProfileButton>\r\n      </Profile>\r\n    </Card>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst UsersListStyled = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 30px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport { UsersListStyled };\r\n","import { colors } from 'components/CommonStyles/Variables';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadMoreStyled = styled.button`\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: ${colors.btnText};\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n  margin: 0 auto;\r\n\r\n  background: ${colors.btnBgrnd};\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  transition: background 250ms ease-out;\r\n\r\n  &:hover {\r\n    background: ${colors.btnActive};\r\n  }\r\n`;\r\n\r\nexport { LoadMoreStyled };\r\n","import { LoadMoreStyled } from './LoadMorebutton.styled';\r\n\r\nexport const LoadMoreButton = ({ onClick }) => {\r\n  return (\r\n    <LoadMoreStyled type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </LoadMoreStyled>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { fetchUsers } from 'services/usersAPI';\r\nimport { UserCard } from 'components/UserCard/UserCard';\r\nimport { UsersListStyled } from './UsersList.styled';\r\nimport { LoadMoreButton } from 'components/LoadMoreButton/LoadMorebutton';\r\n\r\nexport const UsersList = () => {\r\n  const [visibleCardsQty, setVisibleCardsQty] = useState(3);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  // const [onlyFollowUsers, setOnlyFollowUsers] = useState([]);\r\n  const [onlyFollowingUsers, setOnlyFollowingUsers] = useState([]);\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n  console.log(onlyFollowingUsers);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (users.length === 0)\r\n      fetchUsers()\r\n        .then(users => setUsers(users))\r\n        .catch(error => console.error(error.message))\r\n        .finally(setIsLoading(false));\r\n  }, [users.length]);\r\n\r\n  const handleLoadMoreBtn = () => {\r\n    setVisibleCardsQty(prevValue => prevValue + 3);\r\n  };\r\n\r\n  const onFollowBtnClick = id => {\r\n    const followed = users.find(user => user.id === id);\r\n    setOnlyFollowingUsers(prevUsers => [\r\n      ...prevUsers,\r\n      { ...followed, following: true },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UsersListStyled>\r\n        {users?.slice(0, visibleCardsQty).map(user => (\r\n          <li key={user.id}>\r\n            <UserCard\r\n              user={user}\r\n              onFollowClick={onFollowBtnClick}\r\n              following={onlyFollowingUsers}\r\n            />\r\n          </li>\r\n        ))}\r\n      </UsersListStyled>\r\n      {isLoading && users.length !== visibleCardsQty && (\r\n        <LoadMoreButton onClick={handleLoadMoreBtn} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Wrapper } from 'components/CommonStyles/Wrapper';\r\nimport { TweetsView } from './Tweets.styled';\r\nimport { UsersList } from 'components/UsersList/UsersList';\r\n\r\nconst Tweets = () => {\r\n  return (\r\n    <TweetsView>\r\n      <Wrapper>\r\n        <UsersList />\r\n      </Wrapper>\r\n    </TweetsView>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","TweetsView","axios","fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","t0","console","error","message","stop","apply","arguments","Card","CardLogoWrapper","_templateObject2","ProfileBackgroundWrapper","_templateObject3","Profile","_templateObject4","colors","ProfileAvatarThumb","_templateObject5","ProfileAvatar","_templateObject6","ProfileInfoList","_templateObject7","ProfileInfoText","_templateObject8","ProfileButton","_templateObject9","UserCard","user","onFollowClick","followers","following","tweets","avatar","id","_jsxs","children","_jsx","src","alt","ProfileBackgroundImage","type","onClick","UsersListStyled","LoadMoreStyled","LoadMoreButton","UsersList","_useState","useState","_useState2","_slicedToArray","visibleCardsQty","setVisibleCardsQty","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","users","setUsers","_useState7","_useState8","onlyFollowingUsers","setOnlyFollowingUsers","_useState9","_useState10","log","useEffect","length","then","catch","finally","onFollowBtnClick","followed","find","prevUsers","concat","_toConsumableArray","_objectSpread","_Fragment","slice","map","prevValue"],"sourceRoot":""}